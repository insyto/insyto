'use strict';

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRelay = require('react-relay');

var _reactRelay2 = _interopRequireDefault(_reactRelay);

var _Container = require('./Container');

var _Container2 = _interopRequireDefault(_Container);

var _RouteAggregator = require('./RouteAggregator');

var _RouteAggregator2 = _interopRequireDefault(_RouteAggregator);

var RootComponent = (function (_React$Component) {
  _inherits(RootComponent, _React$Component);

  _createClass(RootComponent, null, [{
    key: 'displayName',
    value: 'ReactRouterRelay.RootComponent',
    enumerable: true
  }, {
    key: 'childContextTypes',
    value: {
      routeAggregator: _react2['default'].PropTypes.instanceOf(_RouteAggregator2['default']).isRequired
    },
    enumerable: true
  }]);

  function RootComponent(props, context) {
    var _this = this;

    _classCallCheck(this, RootComponent);

    _React$Component.call(this, props, context);

    this.renderLoading = function () {
      _this._routeAggregator.setLoading();
      return _this.renderComponent();
    };

    this.renderFetched = function (data) {
      _this._routeAggregator.setFetched(data);
      return _this.renderComponent();
    };

    this.renderFailure = function (error, retry) {
      _this._routeAggregator.setFailure(error, retry);
      return _this.renderComponent();
    };

    this._routeAggregator = new _RouteAggregator2['default']();
    this._routeAggregator.updateRoute(props);
  }

  RootComponent.prototype.getChildContext = function getChildContext() {
    return {
      routeAggregator: this._routeAggregator
    };
  };

  RootComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (nextProps.isTransitioning) {
      return;
    }

    this._routeAggregator.updateRoute(nextProps);
  };

  RootComponent.prototype.renderComponent = function renderComponent() {
    return _react2['default'].createElement(_Container2['default'], this.props);
  };

  RootComponent.prototype.render = function render() {
    return _react2['default'].createElement(_reactRelay2['default'].RootContainer, {
      Component: this._routeAggregator,
      route: this._routeAggregator.route,
      renderLoading: this.renderLoading,
      renderFetched: this.renderFetched,
      renderFailure: this.renderFailure
    });
  };

  return RootComponent;
})(_react2['default'].Component);

exports['default'] = RootComponent;
module.exports = exports['default'];